
    if '11' not in filled_points:
        buttons[1][1].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(1, 1)))
        computer_points.append(str(get_combine_number(1, 1)))

    elif ('00' and '02') in user_points and '01' not in filled_points:
        buttons[0][1].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(0, 1)))
        computer_points.append(str(get_combine_number(0, 1)))

    elif ('00' and '01') in user_points and '02' not in filled_points:
        buttons[0][2].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(0, 2)))
        computer_points.append(str(get_combine_number(0, 2)))

    elif ('01' and '02') in user_points and '00' not in filled_points:
        buttons[0][0].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(0, 0)))
        computer_points.append(str(get_combine_number(0, 0)))

    elif ('00' and '10') in user_points and '20' not in filled_points:
        buttons[2][0].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(2, 0)))
        computer_points.append(str(get_combine_number(2, 0)))

    elif ('20' and '10') in user_points and '00' not in filled_points:
        buttons[0][0].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(0, 0)))
        computer_points.append(str(get_combine_number(0, 0)))

    elif ('02' and '12') in user_points and '22' not in filled_points:
        buttons[2][2].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(2, 2)))
        computer_points.append(str(get_combine_number(2, 2)))

    elif ('22' and '12') in user_points and '02' not in filled_points:
        buttons[0][2].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(0, 2)))
        computer_points.append(str(get_combine_number(0, 2)))

    elif ('02' and '22') in user_points and '12' not in filled_points:
        buttons[1][2].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(1, 2)))
        computer_points.append(str(get_combine_number(1, 2)))

    elif ('20' and '22') in user_points and '21' not in filled_points:
        buttons[2][1].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(2, 1)))
        computer_points.append(str(get_combine_number(2, 1)))

    elif ('00' and '20') in user_points and '20' not in filled_points:
        buttons[2][0].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(2, 0)))
        computer_points.append(str(get_combine_number(2, 0)))

    elif ('20' and '21') in user_points and '22' not in filled_points:
        buttons[2][2].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(2, 2)))
        computer_points.append(str(get_combine_number(2, 2)))

    elif ('22' and '21') in user_points and '20' not in filled_points:
        buttons[2][0].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(2, 0)))
        computer_points.append(str(get_combine_number(2, 0)))

    elif ('10' and '12') in user_points and '11' not in filled_points:
        buttons[1][1].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(1, 1)))
        computer_points.append(str(get_combine_number(1, 1)))

    elif ('01' and '21') in user_points and '11' not in filled_points:
        buttons[1][1].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(1, 1)))
        computer_points.append(str(get_combine_number(1, 1)))

    elif ('01' and '11') in user_points and '21' not in filled_points:
        buttons[2][1].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(2, 1)))
        computer_points.append(str(get_combine_number(2, 1)))
        
    elif ('21' and '11') in user_points and '01' not in filled_points:
        buttons[0][1].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(0, 1)))
        computer_points.append(str(get_combine_number(0, 1)))
        
    elif ('10' and '11') in user_points and '12' not in filled_points:
        buttons[1][1].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(1, 2)))
        computer_points.append(str(get_combine_number(1, 2)))
        
    elif ('11' and '12') in user_points and '01' not in filled_points:
        buttons[1][1].config(text=computer_symbol,
                             state="disabled", disabledforeground='black')
        filled_points.append(str(get_combine_number(0, 1)))
        computer_points.append(str(get_combine_number(0, 1)))
        
    else:
        winning_brain(filled_points, buttons, computer_symbol, row, column, button, computer_points)
    
    return computer_points, filled_points   